Types of DBMS Architecture

1-Tier Architecture
2-Tier Architecture
3-Tier Architecture


1-Tier Architecture:- In 1-tier architecture, data is directly presented to the user, who can sit on the DBMS and use it; i.e. client, server and database are on the same machine. Example: To learn SQL, we are setting up an SQL server and database in our local. This allows us to directly interact and work on relational databases. Businesses will not use this architecture, they will need 2 and 3-layer architectures.

Advantages:- 
1. Simple architecture: 1-tier architecture is the simplest architecture as only one machine needs to manage it.
2. Cost Efficiency: No additional hardware is required to implement a single-tier architecture, making it cost-effective.
3. Ease of use: 1-tier architecture is easy to deploy and thus is often used for small projects.


2-Tier Architecture:- The 2-tier architecture is similar to the client-server model. The client application communicates directly with the server-side database. APIs such as ODBC and JDBC are used for this interaction. Responsible for providing server-side query processing and transaction management. Run the UI and application on the client side. The client application contacts the server to communicate with the DBMS.
The advantage of this type is that it is easy to manage and understand and is compatible with existing systems. However, this model does not work well when there are a large number of users.

Advantages:-
1. Ease of access: 2-tier architecture provides easy access to data, enabling rapid recovery.
2. Scalable: We can easily expand the database by adding new customers or upgrading.
3. Low cost: 2-tier architecture is cheaper than 3-tier architecture and multi-tier architecture.
4. Ease of deployment: 2-tier architecture is easier to deploy than 3-tier architecture.
5. Simplicity: 2-tier architecture is easy and simple to understand because there are only two components.


3-Tier Architecture:- In the three-tier architecture, there is another layer consisting of clients and servers. The client does not communicate directly with the server. Instead, it interacts with the application server, which constantly communicates with the database system and then performs query and transaction management. This middleware acts as a medium for the data exchange completed between the server and the client. This type of architecture is used in large web applications.

Advantages:-
1. Improved scalability: Scalability is increased due to the deployment of application servers. There is no longer a need to establish a connection between the client and the server.
2. Data Integrity: 3-layer architecture protects data integrity. Since there is a layer between the client and the server, data corruption is prevented/eliminated. 
3. Security: 3-layer architecture increases security. This type of model reduces unauthorized access to data by preventing direct interaction between the client and server.


