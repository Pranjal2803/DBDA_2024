Implementation of Locking in DBMS
The locking protocol is used as a concurrency control tool in database management systems. More than one transaction can request a lock on the data item at the same time. That's why we need a strategy to manage the key demands of the business. This machine is called a lock controller. It is based on the previous process where processes and lock managers exchange messages to manage locks and lock data items.

Data Structure in Lock Manager:- 
It is a hash table where the name of the object is used as the hash index.
Each locked product file has a document attached to it.
Each of the linked names represents the process requesting the lock, the type of lock request (shared/excepted), and the current status of the request (allowed/pending). Any new locking request for this data object will be added as a new node at the end of the linked list.
Collision in hash tables is controlled by join.

Working as Lock Manager:-
The lock table is empty because no data is initially locked. Lock, a connection will be created and the lock will be granted for the Ti transaction request.
The type is compatible with the lock type of the exchange that already has the lock, Ti will also acquire the lock and the status will change to "Granted".
Otherwise, Ti's security status will be "Five".
The lock manager will remove the Ti node from the list.
Locks will be granted for subsequent changes to the list.
In this case, all pending requests sent by Ti are removed from the connection list in the lock list.
After the curettage is completed, the lock held on Ti will also be opened.


Disadvantages of Locking:-
Locking requires additional overhead, such as acquiring and releasing locks on shared resources.
This overhead can lead to decreased performance and increased resource usage, especially on systems with high levels of consistency.
This creates a cycle of dependency that prevents the business from being successful.
Deadlocks can be difficult to identify and resolve and can result in decreased performance and increased latency.
This can lead to reduced compatibility and decreased performance on systems with high compatibility levels.
This difficulty can lead to development and repair costs.

Advantages of Locking:-
Locking helps ensure data consistency by preventing multiple users from editing data at the same time.
Locking can help prevent data conflicts by controlling access to shared resources and ensure that data remains in a consistent state.
Row-level locking can be used to lock individual rows in a table, while table locking can be used to lock the entire table.
